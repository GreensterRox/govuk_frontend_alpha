// CSS 3 mixins

// This file includes mixins for CSS properties that require vendor prefixes.

// Please add more mixins here as you need them, rather than adding them to
// your application - this lets us manage them in one place.

// You can use the @warn directive to deprecate a mixin where the property
// no longer needs prefixes.

// This style of indentation is preferred as it is easier to scan
// Allow more than two spaces per indentation level and don't require a space after a colon

// sass-lint:disable indentation no-duplicate-properties quotes

@mixin border-radius($radius) {
  border-radius: $radius;
}

@mixin box-shadow($shadow) {
  box-shadow: $shadow;
}

@mixin scale($x, $y, $transform-origin: 50% 50% 0) {
  // $x and $y should be numeric values without units
  transform: scale($x, $y);
  transform-origin: $transform-origin;
}

@mixin translate($x, $y) {
  transform: translate($x, $y);
}

@mixin gradient($from, $to) {
  // Creates a vertical gradient where $from is the colour at the top of the element
  // and $to is the colour at the bottom. The top colour is used as a background-color
  // for browsers that don't support gradients.
  background-color: $from;
  background-image: linear-gradient($from, $to);
}

@mixin transition($property, $duration, $function, $delay: 0s) {
  transition: ($property $duration $function $delay);
}

@mixin box-sizing($type) {
  // http://www.w3.org/TR/css3-ui/#box-sizing
  // $type can be one of: content-box | padding-box | border-box | inherit
  box-sizing: $type;
}

@mixin appearance($appearance) {
  appearance: $appearance;
}

@mixin calc($property, $calc) {
  #{$property}: calc(#{$calc});
}

@mixin opacity($trans) {
  opacity: $trans;
}

// sass-lint:enable indentation no-duplicate-properties quotes
